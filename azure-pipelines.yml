variables:
- group: 'databricks'

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- script: env | sort
  displayName: 'Environment / Context'

- task: UsePythonVersion@0
  displayName: 'Use Python 3.7'
  inputs:
    versionSpec: 3.7

- checkout: self
  persistCredentials: true
  clean: true
  displayName: 'Checkout & Build.Reason: $(Build.Reason) & Build.SourceBranchName: $(Build.SourceBranchName)'

- script: |
    python -m pip install --upgrade databricks-cli
  displayName: 'Install dependencies'

- script: |
        echo "Checking out the $(Build.SourceBranchName) branch"
        databricks repos update --path /Repos/QA/azure-databricks-mlops --branch "$(Build.SourceBranchName)"
  env:
    DATABRICKS_HOST: $(databricks-host)
    DATABRICKS_TOKEN: $(databricks-token)
  displayName: 'Update Staging environment'

- script: |
      JOB_ID=$(databricks jobs create --json-file jobs/create-train-job.json | jq .job_id)
      RUN_ID=$(databricks jobs run-now --job-id $JOB_ID | jq '.run_id')

      job_status="PENDING"
        while [ $job_status = "RUNNING" ] || [ $job_status = "PENDING" ]
        do
          sleep 2
          job_status=$(databricks runs get --run-id $RUN_ID | jq -r '.state.life_cycle_state')
          echo Status $job_status
        done
  env:
    DATABRICKS_HOST: $(databricks-host)
    DATABRICKS_TOKEN: $(databricks-token)
  displayName: 'Train Model'
  
  - script: |
      JOB_ID=$(databricks jobs create --json-file jobs/register-model-job.json | jq .job_id)
      RUN_ID=$(databricks jobs run-now --job-id $JOB_ID | jq '.run_id')

      job_status="PENDING"
        while [ $job_status = "RUNNING" ] || [ $job_status = "PENDING" ]
        do
          sleep 2
          job_status=$(databricks runs get --run-id $RUN_ID | jq -r '.state.life_cycle_state')
          echo Status $job_status
        done
  env:
    DATABRICKS_HOST: $(databricks-host)
    DATABRICKS_TOKEN: $(databricks-token)
  displayName: 'Register Model'
